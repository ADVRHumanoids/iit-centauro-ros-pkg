<launch>

  <arg name="gazebo" default="true" />


  <!-- gazebo configuration parameters -->
  <arg name="paused" default="false" />
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="debug" default="false" />
  <arg name="physics" default="ode" />
  <arg name="verbose" default="false" />
  <arg name="extra_gazebo_args" default="" />

  <!-- centauro configuration parameters -->
  <arg name="arms" default="true" />
  <arg name="legs" default="true" />
  <arg name="velodyne" default="false" />
  <arg name="realsense" default="false" />
  <arg name="end_effector_left" default="ball" />
  <arg name="end_effector_right" default="ball" />

  <!-- Internal arguments, rewrite human-readable gazebo arguments to it's internal arguments -->
  <let unless="$(var paused)" name="command_arg1" value="" />
  <let if="$(var paused)" name="command_arg1" value="-u" />
  <let unless="$(var headless)" name="command_arg2" value="" />
  <let if="$(var headless)" name="command_arg2" value="-r" />
  <let unless="$(var verbose)" name="command_arg3" value="" />
  <let if="$(var verbose)" name="command_arg3" value="--verbose" />
  <let unless="$(var debug)" name="script_type" value="gzserver" />
  <let if="$(var debug)" name="script_type" value="debug" />


  <!-- from where the simulation enviornment will be loaded:
       WARNING: exactly one parameter has to be true, otherwise simulation behaviour is undefined -->
  <arg name="world_name" default="$(find-pkg-share centauro_gazebo)/worlds/centauro.world" />


  <!-- Load the URDF/SRDF into the ROS Parameter Server -->
  <!-- <param name="robot_description_gz"
         command="$(find-pkg-share xacro)/xacro $(find-pkg-share
  centauro_urdf)/urdf/centauro_robot.urdf.xacro floating_joint:=false upper_body:=$(var arms)
  legs:=$(var legs) velodyne:=$(var velodyne) realsense:=$(var realsense) end_effector_left:=$(var
  end_effector_left) end_effector_right:=$(var end_effector_right)"/>
   -->

  <node pkg="robot_state_publisher" exec="robot_state_publisher">
    <param type="str" name='robot_description'
      value="$(command 'xacro $(find-pkg-share centauro_urdf)/urdf/centauro_robot.urdf.xacro floating_joint:=false upper_body:=$(var arms) legs:=$(var legs) velodyne:=$(var velodyne) realsense:=$(var realsense) end_effector_left:=$(var end_effector_left) end_effector_right:=$(var end_effector_right)')" />
  </node>


  <!-- run gazebo -->
  <group if="$(var gazebo)">

    <!-- start gazebo server-->
    <include file="$(find-pkg-share gazebo_ros)/launch/gzserver.launch.py">
      <arg name="world" value="$(var world_name)" />
    </include>

    <!-- <node name="gazebo"
      pkg="gazebo_ros"
      exec="$(var script_type)"
      respawn="false"
      output="screen"
      args="$(var command_arg1) $(var command_arg2) $(var command_arg3) -e $(var physics) $(var
    extra_gazebo_args) $(var world_name) -namespace centauro" /> -->

    <!-- start gazebo client -->
    <include if="$(var gui)" file="$(find-pkg-share gazebo_ros)/launch/gzclient.launch.py" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" exec="spawn_entity.py" respawn="false"
      output="screen"
      args="-entity centauro -topic /robot_description " />

  </group>


</launch>